// Generated by CoffeeScript 1.8.0
(function() {
  var app, body_parser, express, get_type, home, html_dir, http, search, widget, wikipedia, youtube;

  express = require('express');

  body_parser = require('body-parser');

  app = express();

  app.set('port', process.env.PORT || 5000);

  app.use(express["static"](__dirname + '/public'));

  app.use(body_parser.json());

  app.use(body_parser.urlencoded({
    extended: true
  }));

  http = require('http');

  wikipedia = function(query, deliver) {
    return http.get({
      host: "http://en.wikipedia.org/w/api.php?action=opensearch&search=" + query
    }, function(res) {
      return deliver(res[1]);
    });
  };

  youtube = function(query, deliver) {
    return http.get({
      host: "http://en.wikipedia.org/w/api.php?action=opensearch&search=" + "bla" + query
    }, function(res) {
      return deliver(res[1]);
    });
  };

  search = function(term, cb) {
    var api, deliver, done, results, _i, _len, _ref, _results;
    results = [];
    done = 2;
    deliver = function(items) {
      done -= 1;
      results += items;
      if (done === 0) {
        return cb(results);
      }
    };
    _ref = [wikipedia, youtube];
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      api = _ref[_i];
      _results.push(api(term, deliver));
    }
    return _results;
  };

  get_type = function(url) {
    if (url.match("[^\s]+\.(jpg|png|gif|bmp)")) {
      return "image";
    } else if (url.match("[^\s]+\.youtube\.com/watch\\?v=\w*")) {
      return "youtube";
    } else if (url.match("http://\w*")) {
      return "link";
    } else {
      return "search";
    }
  };

  widget = function(url, cb) {
    var id;
    switch (get_type(url)) {
      case "search":
        return search(url, cb);
      case "link":
        return "<a href=\"" + url + "\" >" + url + "</a>";
      case "image":
        return "<img src=\"" + url + "\">";
      case "youtube":
        id = url.match("[^\s]+\.youtube\.com/watch\?v=(\w*)");
        return "<iframe id=\"ytplayer\" type=\"text/html\" width=\"300\" height=\"250\" src=\"http://www.youtube.com/embed/" + id + "?autoplay=1&origin=http://example.com\"frameborder=\"0\"/>";
    }
  };

  html_dir = './public/';

  home = function() {
    return res.sendFile(html_dir + 'index.html');
  };

  app.get('/', function(req, res) {
    return home();
  });

  app.get('/note/:id', function(req, res) {
    if (req.params.id) {
      return res.send(new Buffer(decodeURIComponent(req.params.id), 'base64').toString('ascii'));
    } else {
      return home();
    }
  });

  app.get('/search/:query', function(req, res) {
    var temp;
    temp = widget(decodeURIComponent(req.params.query));
    return res.send(temp);
  });

  app.post('/publish', function(req, res) {
    return res.send(encodeURIComponent(new Buffer(widget(decodeURIComponent(req.body.input))).toString('base64')));
  });

  app.listen(app.get('port'), function() {
    return console.log("Node app is running at localhost:" + app.get('port'));
  });

}).call(this);
